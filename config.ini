[Mnist]
file = './data'
training_size = 600
testing_size = 100

learning_iterations = 10
test_period = 10
randomize_learning_set = True

activation_funs = [Sigmoid(0.1), Sigmoid(0.1), Sigmoid(0.1)]
error_fun = Norm2()
network_layers = [784, 300, 10]

eta = 0.2

training_fun = MnistTest
testing_fun = MnistTest
SaveFolder = 'Mnist'

[GanMnist]
file = './data'

numbers_to_draw = [7, 8]
 
disc_learning_ratio = 1
disc_fake_learning_ratio = 0

disc_activation_funs = [Sigmoid(0.1), Sigmoid(0.1), Sigmoid(0.1)]
disc_error_fun = CostFunction()
disc_network_layers = [784, 10, 1]

eta_disc = 0.5

training_fun = MnistGanTest



generator_network_layers = [100, 300, 784] 
noise_layers_size = [0, 300, 0]
generator_activation_funs = [Sigmoid(0.1), Sigmoid(0.1), Sigmoid(0.1)]

gen_learning_ratio = 10
gen_learning_ratio_alone = 0
eta_gen = 0.5

nb_images_during_learning = 20
nb_images_par_sortie_during_learning = 5
final_images = 10

play_number = 1000000

save_folder = '2couchebruit800_4et5'
test_period = 10000
lissage_test = 10
