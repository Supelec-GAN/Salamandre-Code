[Mnist]
file = './data'
training_size = 600
testing_size = 100

learning_iterations = 1
test_period = 10
randomize_learning_set = True

activation_funs = [Sigmoid(0.1), Sigmoid(0.1), Sigmoid(0.1)]
error_fun = Norm2()
network_layers = [784, 10, 30, 10]

eta = 0.2

training_fun = MnistTest
testing_fun = MnistTest
SaveFolder = 'Mnist'

[GanMnist]

number_of_experiment = 10

file = './data'


numbers_to_draw = [[7, 8]]*10
 
disc_learning_ratio = [1]*10
disc_fake_learning_ratio = [0]*10

disc_activation_funs = [[Sigmoid(0.1), Sigmoid(0.1), Sigmoid(0.1)]]*10
disc_error_fun = [CostFunction()]*10
disc_network_layers = [[784, 10, 1]]*10

eta_disc = [0.5]*10

training_fun = [MnistGanTest]*10

generator_network_layers = [[100, 300, 784]]*10 
noise_layers_size = [[0, 300, 0]]*10
generator_activation_funs = [[Sigmoid(0.1), Sigmoid(0.1), Sigmoid(0.1)]]*10

gen_learning_ratio = [1]*10
gen_learning_ratio_alone = [0]*10
eta_gen = [0.5]*10

nb_images_during_learning = [20]*10
nb_images_par_sortie_during_learning = [5]*10
final_images = [10]*10

play_number = [1000000]*10

save_folder = ['test']*10
test_period = [10000]*10
lissage_test = [10]*10
