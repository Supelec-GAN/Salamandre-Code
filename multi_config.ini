[Mnist]
file = './data'
training_size = 600
testing_size = 100

learning_iterations = 1
test_period = 10
randomize_learning_set = True

activation_funs = [Sigmoid(0.1), Sigmoid(0.1), Sigmoid(0.1)]
error_fun = Norm2()
network_layers = [784, 10, 30, 10]

eta = 0.2

training_fun = MnistTest
testing_fun = MnistTest
SaveFolder = 'Mnist'

[GanMnist]

number_exp = [1]

file = ['./data']


numbers_to_draw = [[1, 2, 3, 4, 5, 6, 7, 8, 9, 0]]
 
disc_learning_ratio = [1]
disc_fake_learning_ratio = [0]

disc_activation_funs = [[Sigmoid(0.1), Sigmoid(0.1), Sigmoid(0.1)]]
disc_error_fun = [CostFunction()]
disc_network_layers = [[784, 10, 1]]

eta_disc = [0.5, 0.02, 0.05, 0.1, 0.2, 0.5, 1, 2, 5, 10]

training_fun = [MnistGanTest]

generator_network_layers = [[100, 300, 784]] 
noise_layers_size = [[0, 300, 0]]
generator_activation_funs = [[Sigmoid(0.1), Sigmoid(0.1), Sigmoid(0.1)]]

gen_learning_ratio = [1]
gen_learning_ratio_alone = [0]
eta_gen = [0.5, 0.02, 0.05, 0.1, 0.2, 0.5, 1, 2, 5, 10]

nb_images_during_learning = [5000]
nb_images_par_sortie_during_learning = [20]
final_images = [20]

play_number = [1000000]

save_folder = ['test_pres2' + i for i in ['1', '0_02', '0_05', '0_1', '0_2', '0_5', '1', '2', '5', '10']]
test_period = [1000000]
lissage_test = [1]

